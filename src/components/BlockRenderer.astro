---
import { Image } from 'astro:assets'
import BlockRenderereInner from './BlockRenderer.astro'
import { getBlockStyling, type Block } from '@wp-block-tools/styles'
import Navigation from './Navigation.astro'
import NavigationLink from './NavigationLink.astro'
import NavigationSubmenu from './NavigationSubmenu.astro'

interface Props {
  blocks: Block[]
}
const { blocks } = Astro.props

---

{
  blocks.map((block) => {
  const { styles, classes } = getBlockStyling(block);
    switch(block.name) {
      case "core/navigation-submenu":
        return (
          <NavigationSubmenu classes={classes} styles={styles}
          label={block.attributes?.label || ""} 
          url={block.attributes?.url || ""}>
            <BlockRenderereInner blocks={block.innerBlocks || []} />
          </NavigationSubmenu>
        )
      case "core/navigation-link":
        return (
          <NavigationLink  classes={classes} styles={styles} 
          label={block.attributes?.label || ""} 
          url={block.attributes?.url || ""}/>
        )
      case "core/navigation":
        return (
          <Navigation classes={classes} styles={styles}>
            <BlockRenderereInner blocks={block.innerBlocks || []} />
          </Navigation>
        )

      case "core/paragraph":
      
        return <p class={classes} style={styles}
        set:html={block.attributes?.content}>
        </p>
      case "core/quote":
      case "core/columns":
      case 'core/column':
      case "core/post-content":
      case "core/group":
      return (<div class={classes} style={styles}>
      <BlockRenderereInner blocks={block.innerBlocks || []} />
      </div>);
      case "core/site-logo":
        return (
        <div class={classes} style={styles}>
          <Image width={block.attributes?.width || "50"} 
          height={block.attributes?.width || "50"}
          src={block.attributes?.url || ""}
          alt="Site logo"
          />
        </div>
        )
      case "core/template-part":
        return (
        <BlockRenderereInner blocks={block.innerBlocks || []} />
        )
    default:
    return null
    
  }
  })
}

