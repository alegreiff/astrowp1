---
import type { GetStaticPaths } from "astro";
import type { Block } from "@wp-block-tools/styles";
import BlockRenderer from "../components/BlockRenderer.astro";
import CommonHead from "../components/CommonHead.astro";


export async function getStaticPaths() {
  const response = await fetch(`${import.meta.env.WPGRAPHQL_URL}`, {
    method: "POST",
    headers: {
      "content-type": "application/json",
    },
    body: JSON.stringify({
      query: `
			query AllPages {
  			pages( first: 100){
    			nodes {
					uri
      		
					}
				}
			}
		`,
    }),
  });
  const { data } = await response.json();
  //console.log(data.pages.nodes[0].seo);
  return data.pages.nodes.map((page: any) => ({
    /* params: { slug: page.uri === "/" ? undefined : page.uri }, */
		params: { slug: page.uri },
  }));
  //return [];
}

const response = await fetch(`${import.meta.env.WPGRAPHQL_URL}`, {
  method: "POST",
  headers: {
    "content-type": "application/json",
  },
  body: JSON.stringify({
    query: `
			query pageQuery ($uri: String!) {
  		nodeByUri(uri: $uri) {
    	... on Page {
      id
      blocks
			seo {
        metaDesc
        title
      }
    }
  }
}`,
    variables: {
      /* uri: Astro.params.slug || "/", */
      uri: Astro.params["slug"] || "/",
    },
  }),
});
const { data } = await response.json();
const blocks = (data.nodeByUri?.blocks || []) as Block[];
const seo = data.nodeByUri?.seo || [];
//const { blocks, seo } = Astro.props
const rutas = Astro.url.host;
---

<html lang="en">
  <CommonHead title={seo.title || ""} description={seo.metaDesc || ""} />
  <body>
    <BlockRenderer blocks={blocks} />

    <div class="bg-pink-800 text-white p-4">
      <pre>
				{JSON.stringify(rutas, null, 2)}
			</pre>
    </div>
  </body>
</html>
